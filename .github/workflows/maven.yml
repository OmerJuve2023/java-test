# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Set up PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install postgresql postgresql-contrib

      - name: Set up database
        run: |
          sudo -u postgres psql -c "CREATE DATABASE mydatabase;"
          sudo -u postgres psql -c "CREATE USER myuser WITH PASSWORD 'mypassword';"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE mydatabase TO myuser;"

      - name: Set environment variables
        env:
          USERNAME_DEV: myuser
          PASSWORD_DEV: mypassword
          HOST_DEV: localhost
          PORT_DEV: 5432
          DATABASE_DEV: mydatabase
        run: echo "Environment variables set"

      - name: Build Spring Boot application
        run: ./gradlew build

      - name: Run Spring Boot application
        run: java -jar build/libs/java-challenge.jar
